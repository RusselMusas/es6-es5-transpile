{"version":3,"sources":["webpack://es6-es5-transpile/./js/main.js","webpack://es6-es5-transpile/./js/mortgage.js"],"names":["document","getElementById","addEventListener","principal","years","rate","monthlyRate","monthlyPayment","Math","pow","calculateMonthlyPayment","balance","amortization","y","interestY","principalY","m","interestM","principalM","push","mortgage","value","innerHTML","toFixed","forEach","month","console","log"],"mappings":"yBAEAA,SAASC,eAAe,WAAWC,iBAAiB,SAAS,WACzD,IAGA,ECG+B,SAACC,EAAWC,EAAOC,GAIlD,IAHA,MAViC,SAACF,EAAWC,EAAOC,GACpD,IAAIC,EAAc,EAKlB,OAJID,IACAC,EAAcD,EAAO,IAAM,IAGxB,CAACF,YAAWC,QAAOC,OAAME,eADXJ,EAAYG,GAAe,EAAKE,KAAKC,IAAI,GAAK,EAAIH,GAAsB,GAARF,IACrCE,eAIZI,CAAwBP,EAAWC,EAAOC,GAAzEC,EAAL,EAAKA,YAAaC,EAAlB,EAAkBA,eACdI,EAAUR,EACVS,EAAe,GACVC,EAAE,EAAGA,EAAET,EAAOS,IAAK,CAGxB,IAFA,IAAIC,EAAY,EACZC,EAAa,EACRC,EAAE,EAAGA,EAAE,GAAIA,IAAK,CACrB,IAAIC,EAAYN,EAAUL,EACtBY,EAAaX,EAAiBU,EAClCH,GAAwBG,EACxBF,GAA0BG,EAC1BP,GAAoBO,EAExBN,EAAaO,KAAK,CAACJ,aAAYD,YAAWH,YAE9C,MAAO,CAACJ,iBAAgBD,cAAaM,gBDnBaQ,CAHlCpB,SAASC,eAAe,aAAaoB,MACzCrB,SAASC,eAAe,SAASoB,MAClCrB,SAASC,eAAe,QAAQoB,OACtCd,EAAL,EAAKA,eAAgBD,EAArB,EAAqBA,YAAaM,EAAlC,EAAkCA,aAClCZ,SAASC,eAAe,kBAAkBqB,UAAYf,EAAegB,QAAQ,GAC7EvB,SAASC,eAAe,eAAeqB,WAA2B,IAAdhB,GAAmBiB,QAAQ,GAC/EX,EAAaY,SAAQ,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,S","file":"main.bundle.js","sourcesContent":["import * as mortgage from './mortgage';\r\n\r\ndocument.getElementById('calcBtn').addEventListener('click', () => {\r\n    let principal = document.getElementById(\"principal\").value;\r\n    let years = document.getElementById(\"years\").value;\r\n    let rate = document.getElementById(\"rate\").value;\r\n    let {monthlyPayment, monthlyRate, amortization} = mortgage.calculateAmortization(principal, years, rate);\r\n    document.getElementById(\"monthlyPayment\").innerHTML = monthlyPayment.toFixed(2);\r\n    document.getElementById(\"monthlyRate\").innerHTML = (monthlyRate * 100).toFixed(2);\r\n    amortization.forEach(month => console.log(month));\r\n    return;\r\n});","export let calculateMonthlyPayment = (principal, years, rate) => {\r\n    let monthlyRate = 0;\r\n    if (rate) {\r\n        monthlyRate = rate / 100 / 12;\r\n    }\r\n    let monthlyPayment = principal * monthlyRate / (1 - (Math.pow(1 / (1 + monthlyRate), years * 12)));\r\n    return {principal, years, rate, monthlyPayment, monthlyRate};\r\n};\r\n\r\nexport let calculateAmortization = (principal, years, rate) => {\r\n    let {monthlyRate, monthlyPayment} = calculateMonthlyPayment(principal, years, rate);\r\n    let balance = principal;\r\n    let amortization = [];\r\n    for (let y=0; y<years; y++) {\r\n        let interestY = 0;  //Interest payment for year y\r\n        let principalY = 0; //Principal payment for year y\r\n        for (let m=0; m<12; m++) {\r\n            let interestM = balance * monthlyRate;       //Interest payment for month m\r\n            let principalM = monthlyPayment - interestM; //Principal payment for month m\r\n            interestY = interestY + interestM;\r\n            principalY = principalY + principalM;\r\n            balance = balance - principalM;\r\n        }\r\n        amortization.push({principalY, interestY, balance});\r\n    }\r\n    return {monthlyPayment, monthlyRate, amortization};\r\n};"],"sourceRoot":""}